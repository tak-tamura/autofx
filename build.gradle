plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.5'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.takuro-tamura'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	implementation("org.springframework.boot:spring-boot-starter-aop")
	implementation("org.springframework.retry:spring-retry")
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.3'
	implementation 'com.tictactec:ta-lib:0.4.0'
	implementation 'org.apache.commons:commons-lang3:3.17.0'
	implementation 'org.apache.commons:commons-collections4:4.5.0-M2'
	implementation 'com.google.guava:guava:33.3.1-jre'
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.15.0'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.boot:spring-boot-testcontainers'
	testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:3.0.3'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'org.testcontainers:junit-jupiter'
	testImplementation 'org.testcontainers:mysql'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

//tasks.named('test') {
//	useJUnitPlatform()
//}

processResources {
	dependsOn('copyReactBuild')
}

tasks.register('buildReact', Exec) {
	workingDir "front"
	commandLine 'npm', 'install'
}

tasks.register('buildReactApp', Exec) {
	dependsOn('buildReact')
	workingDir 'front'
	commandLine 'npm', 'run', 'build'
}

tasks.register('copyReactBuild', Copy) {
	dependsOn('buildReactApp')
	from "$projectDir/front/build"
	into "$projectDir/src/main/resources/static"
}
